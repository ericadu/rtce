package model;

import java.util.ArrayList;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;

/**
 * Rep Invariant: all lines contain at most maxChar characters.
 * EDIT ::== INSERT | DELETE | ENTER
 *  
 * @author AndrewHuang
 */
public class DocumentModel {
	private final ArrayList<String> document;
	private final int maxChar = 26; //Subject to change
	private final Lock globalLock = new ReentrantLock();
	
	public DocumentModel() { 
		this.document = new ArrayList<String>();
	}
	
	public void insert(int line, String text) {
		//TODO: Fill in method
		synchronized (document) {
			String docLine = document.get(line);
			if (docLine.length() + text.length() > maxChar) {
				
			}
			else synchronized (document.get(line)) {
				document.release();
			}
			checkRep(line);
		}
	}
	public void delete(int line, int pos) {
		//TODO: Fill in method
		synchronized (document.get(line)) {
			
			checkRep(line);
		}
	}
	
	public void checkRep(int line) throws RuntimeException {
		if (document.get(line).length() > this.maxChar) {
			throw new RuntimeException("Too many characters in one line.");
		}
	}
}
